.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Dn::Cards::ExtractImages::RegionBounds 3pm"
.TH Dn::Cards::ExtractImages::RegionBounds 3pm "2017-03-07" "perl v5.24.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dn::Cards::ExtractImages::RegionBounds \- store coordinates of rectangular regions
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Dn::Cards::ExtractImages::RegionBounds;
\&    ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Stores coordinates information delineating rectangular regions of images. For
each region the x and y coordinates of the top-left and bottom-right pixels of
the region are recorded.
.PP
This module was written to be used by the Dn::Cards::ExtractImages module.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "top_left_coords"
.IX Subsection "top_left_coords"
X and y coordinates of the top-left pixel in the rectangular region. Array
reference containing integers. Optional. Default: [].
.SS "bottom_right_coords"
.IX Subsection "bottom_right_coords"
X and y coordinates of the bottom-right pixel in the rectangular region. Array reference containing integers. Optional. Default: [].
.SH "METHODS"
.IX Header "METHODS"
.SS "add_top_left(@coords)"
.IX Subsection "add_top_left(@coords)"
Add coordinates for top-left pixel of rectangular region of image.
.PP
\fIParams\fR
.IX Subsection "Params"
.ie n .IP "@coords" 4
.el .IP "\f(CW@coords\fR" 4
.IX Item "@coords"
X and y coordinates. List of integers. Required.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Nil.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
N/A.
.SS "\fItop_left()\fP"
.IX Subsection "top_left()"
Get coordinates for top-left pixel of rectangular region of image.
.PP
\fIParams\fR
.IX Subsection "Params"
.PP
Nil.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Nil.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
List of integers.
.SS "\fIclear_top_left()\fP"
.IX Subsection "clear_top_left()"
Clear existing coordinates for the top-left pixel.
.PP
\fIParams\fR
.IX Subsection "Params"
.PP
Nil.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Nil.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
N/A.
.SS "add_bottom_right(@coords)"
.IX Subsection "add_bottom_right(@coords)"
Add coordinates for bottom-right pixel of rectangular region of image. List of
integers. Required.
.PP
\fIParams\fR
.IX Subsection "Params"
.ie n .IP "@coords" 4
.el .IP "\f(CW@coords\fR" 4
.IX Item "@coords"
X and y coordinates. List of integers. Required.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Nil.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
N/A.
.SS "\fIbottom_right()\fP"
.IX Subsection "bottom_right()"
Get coordinates for bottom-right pixel of rectangular region of image.
.PP
\fIParams\fR
.IX Subsection "Params"
.PP
Nil.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Nil.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
List of integers.
.SS "\fIclear_bottom_right()\fP"
.IX Subsection "clear_bottom_right()"
Clear existing coordinates for the bottom-right pixel.
.PP
\fIParams\fR
.IX Subsection "Params"
.PP
Nil.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Nil.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
N/A.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
There are no configuration files used. There are no module/role settings.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
namespace::clean, English, Moo, MooX::HandlesVia, Readonly, strictures,
Types::Standard, version.
.SS "\s-1INCOMPATIBILITIES\s0"
.IX Subsection "INCOMPATIBILITIES"
There are no known incompatibilities with other modules.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH "AUTHOR"
.IX Header "AUTHOR"
David Nebauer <davidnebauer@hotkey.net.au>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2017 David Nebauer (david at nebauer dot org)
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
