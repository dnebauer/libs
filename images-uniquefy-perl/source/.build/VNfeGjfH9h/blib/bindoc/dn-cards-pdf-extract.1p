.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DN-CARDS-PDF-EXTRACT 1p"
.TH DN-CARDS-PDF-EXTRACT 1p "2017-03-07" "perl v5.24.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dn\-cards\-pdf\-extract \- extract pdf pages as images
.SH "USAGE"
.IX Header "USAGE"
\&\fBdn-cards-pdf-extract\fR [\fB\-d\fR \fIdensity\fR] [\fB\-q\fR \fIquality\fR] \fIglob\fR [\fIglob\fR
\&...]
.PP
\&\fBdn-cards-pdf-extract \-h\fR
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
.IP "\fBglob\fR" 4
.IX Item "glob"
Glob specifying pdf files. Specifying files other than image files will result
in either the Image::Magick or Perl::API2 module dying spectacularly when it
attempts to load the file as an image, which also causes this script to die.
String. Required.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-d\fR  \fB\-\-density\fR" 4
.IX Item "-d --density"
Image resolution in dots per inch (dpi). This is an ImageMagick attribute.
Integer. Optional. Default: 300.
.Sp
Further details are available from online
documentation <http://www.imagemagick.org/script/command-line-options.php#density>.
On debian systems the libimage-magick-perl package provides similar
information <file:///usr/share/doc/libimage-magick-perl/html/www/command-line-options.html#density>.
.IP "\fB\-q\fR  \fB\-\-quality\fR" 4
.IX Item "-q --quality"
Set image compression level. This is an ImageMagick attribute. Values range
from 1 (lowest image quality and highest compression) to 100 (best quality but
least effective compression). Integer. Optional. Default: 100.
.Sp
Further details are available from online
documentation <http://www.imagemagick.org/script/command-line-options.php#quality>.
On debian systems the libimage-magick-perl package provides similar
information <file:///usr/share/doc/libimage-magick-perl/html/www/command-line-options.html#quality>.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Display help and exit.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Takes a set of pdf files and extracts each page as a png image file. All output
files are created in the current directory, overwriting any files of the same
name.
.PP
The created image files have the same base name as their parent pdf files, with
an added page number. The page numbers are left-zero-padded so as to have a
uniform width, enabling correct sorting order. For example, the 13\-page pdf
file \fImy\-stuff.pdf\fR will give rise to 13 image files, including
\&\fImy\-stuff_03.png\fR and \fImy\-stuff_12.png\fR.
.PP
Since multiple input filepaths can have the same file name, and all output file
names are derived from the parent pdf file name, and all output files are
written to the current directory, and existing output files are silently
overwritten, having multiple input filepaths with identical file names is
problematic. For that reason, the \f(CW\*(C`extract_images\*(C'\fR method will abort if it
detects multiple input filepaths with identical file names.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Dn::Role::Path, English, Function::Parameters, List::MoreUtils, Moo,
MooX::HandlesVia, MooX::Options, namespace::clean, Readonly, strictures,
Types::Standard, version.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH "AUTHOR"
.IX Header "AUTHOR"
David Nebauer (david at nebauer dot org)
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2017 David Nebauer (david at nebauer dot org)
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
