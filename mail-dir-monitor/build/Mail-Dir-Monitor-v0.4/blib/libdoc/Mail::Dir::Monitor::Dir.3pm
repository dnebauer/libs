.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::Dir::Monitor::Dir 3pm"
.TH Mail::Dir::Monitor::Dir 3pm 2024-06-14 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Mail::Dir::Monitor::Dir \- model a mail queue directory
.SH VERSION
.IX Header "VERSION"
This documentation is for Mail::Dir::Monitor::Dir version 0.4.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 10
\&    has \*(Aq_dirs_list\*(Aq => (
\&      is  => \*(Aqrw\*(Aq,
\&      isa => Types::Standard::ArrayRef [
\&        Types::Standard::InstanceOf [\*(AqMail::Dir::Monitor::Dir\*(Aq],
\&      ],
\&      default     => sub { [] },
\&      handles_via => \*(AqArray\*(Aq,
\&      handles     => { _dirs => \*(Aqelements\*(Aq },
\&      doc         => \*(AqArray of mail queue directories\*(Aq,
\&    );
\&
\&    # ...
\&
\&    while ($TRUE) {
\&
\&      $loop++;
\&
\&      if ($loop > $delay) {
\&        for my $dir ($self\->_dirs) { $dir\->check; }
\&        $loop = 0;
\&      }
\&      sleep 1;
\&    }
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
A helper module for Mail::Dir::Monitor that models a mail queue directory.
See "DESCRIPTION" in Mail::Dir::Monitor for more details.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
.SS Properties
.IX Subsection "Properties"
\fIdir\fR
.IX Subsection "dir"
.PP
The path to the directory.
.PP
String. Required.
.PP
\fImail\fR
.IX Subsection "mail"
.PP
Whether to notify user of blocked email messages by sending an email to their
local user account using the \f(CW\*(C`mail\*(C'\fR utility that is standard on *nix systems.
Will have no effect if no \f(CW\*(C`mail\*(C'\fR executable is available.
.PP
Note that most systems are not set up by default to notify a user when local
user mail is received \-\- local user mail is handled differently to email
received from an ISP. The only notification is that users receive a message in
their terminal the next time they log into it. Users who rely on a graphical
user interface and do not use terminals will never see any notifications
regarding local user mail.
.PP
Boolean. Optional. Default: false.
.PP
\fImask\fR
.IX Subsection "mask"
.PP
By default this script monitors all files in a mail queue directory. Sometimes,
however, it may be preferable to monitor only a particular type of file. For
example, in mail configurations including msmtp each email sent can result in
two files being created in the mail queue directory: a \fI.msmtp\fR file and a
\&\fI.mail\fR file. Since notification messages include a list of "stuck" files, to
minimise message size it may be desirable to monitor only one of those two file
types.
.PP
This is done by specifying a regular expression that matches the file type to
be monitored. Only the expression itself need by specified. For example, to
specify \fI.msmtp\fR files you may use the value "[.]msmtp\eZ". This will be
converted internally into the regular expression
.PP
.Vb 1
\&    qr/[.]msmtp\eZ/xsm
.Ve
.PP
String. Optional. Default: ".*".
.PP
\fIname\fR
.IX Subsection "name"
.PP
A human readable name for the directory intended to be used in user feedback.
The name can consist of multiple words. It should fit naturally into the
following sentence instead of NAME: "The NAME has stuck email files."
.PP
String. Required.
.PP
\fIuser\fR
.IX Subsection "user"
.PP
User login name of the owner of the mail queue. This is used for sending direct
feedback via local mail and terminal messages, so if there is any confusion
over the ownership of a mail queue, choose the user to whom notifications
should be sent. This value is required even if both \f(CW\*(C`mail\*(C'\fR and \f(CW\*(C`write\*(C'\fR are to
be left disabled.
.PP
Boolean. Optional. Default: false.
.PP
\fIwrite\fR
.IX Subsection "write"
.PP
Whether to notify user of blocked email messages by sending a message directly
to their terminal using the \f(CW\*(C`write\*(C'\fR utility that is standard on *nix systems.
Will have no effect if no \f(CW\*(C`write\*(C'\fR executable is available.
.PP
Individual users can configure their terminals to not receive \f(CW\*(C`write\*(C'\fR
messages, though on most system the default for users is to allow display of
such messages. See the manpage for \f(CW\*(C`write\*(C'\fR for more details.
.PP
There are a number of circumstances in which it may be inadvisable to utilise
this method of notification:
.IP \(bu 4
Users who rely on a graphical user environment and do not use terminals.
.IP \(bu 4
Users who primarily use terminals for console editors, such as vim, as the
messages sent by write will disrupt the editor display.
.IP \(bu 4
Users who routinely use multiple terminals and/or terminal multiplexers, as the
message will be sent to only one terminal and that terminal may not be visible
to the user at the time the message is sent.
.PP
Boolean. Optional. Default: false.
.SS "Configuration directory"
.IX Subsection "Configuration directory"
None.
.SS "Environment variables"
.IX Subsection "Environment variables"
None.
.SH SUBROUTINES/METHODS
.IX Header "SUBROUTINES/METHODS"
.SS \fBcheck()\fP
.IX Subsection "check()"
\fIPurpose\fR
.IX Subsection "Purpose"
.PP
Compare current directory contents with previous contents.
.PP
\fIParameters\fR
.IX Subsection "Parameters"
.PP
None.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Log message and notification if previous file(s) still present.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
Void. Dies on failure.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
These messages are written to the log.
.SS "Blocked mail queue directory: NAME (DIR) has NUM stuck files: file1, ..."
.IX Subsection "Blocked mail queue directory: NAME (DIR) has NUM stuck files: file1, ..."
Occurs if a mail queue directory contains the same file(s) in consecutive
content checks.
.SS "Directory has been deleted! (DIR)"
.IX Subsection "Directory has been deleted! (DIR)"
Occurs if a mail queue directory is deleted between checks. Warning.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
There are no known incompatibilities.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Const::Fast, Cwd, English, File::Util, Moo, MooX::HandlesVia, namespace::clean,
strictures, Types::Path::Tiny, Types::Standard, version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer (david at nebauer dot org)
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer (david at nebauer dot org)
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
