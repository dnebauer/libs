#! /bin/bash
# postinst script for libdncommon-bash
#
# see: dh_installdeb(1)

set -e
. /usr/share/debconf/confmodule # use debconf

# VARIABLES

# Package and addon names
declare addon="libdncommon-bash-shell-ftplugin"
declare pkg="libdncommon-bash"

# Are we enabling addon system-wide?
db_get ${pkg}/install-addons
declare enable="${RET}" # db_get stores result in 'RET' variable

# Is vim-addons manager available
declare manager_available="true"
which vim-addons &>/dev/null || manager_available='false'

# PROCEDURES

# Install addon system-wide
#   params: 1 - addon name [string]
#           2 - whether addon is to be enabled [boolean: 'true'|'false']
#           3 - whether vim-addons manager is available
#               [boolean: 'true'|'false']
#   prints: feedback
#   return: nil
installAddon() {
	local addon="${1}" enable="${2}" manager_available="${3}"
	if [ "${manager_available}" = 'true' ]; then # use vim-addons
		if [ "${enable}" = 'true' ]; then
			echo "Info: installing ${addon} addon system-wide..."
			vim-addons -w install "${addon}"
		fi
	else # can't locate vim-addons
		echo "Info: vim addon manager 'vim-addons' is not available"
		echo "Warn: unable to enable '${addon}' addon system-wide"
		echo -n "Info: vim-addons is provided by"
		echo " debian package 'vim-addon-manager'"
		echo "Info: after installation check man page for vim-addons"
	fi
}

# MAIN

# Handle package events
case "${1}" in

'configure')
	installAddon "${addon}" "${enable}" "${manager_available}"
	;;

'abort-upgrade' | 'abort-remove' | 'abort-deconfigure' | 'reconfigure') ;;

*)
	if test -z "${1}"; then
		echo "postinst called with no argument" >&2
	else
		echo "postinst called with unknown argument '${1}'" >&2
	fi
	exit 1
	;;

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
