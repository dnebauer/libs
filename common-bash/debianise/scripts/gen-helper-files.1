.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "GEN-HELPER-FILES 1"
.TH GEN-HELPER-FILES 1 2025-07-03 "perl v5.40.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
gen\-helper\-files \- create build files for dncommon\-bash library
.SH USAGE
.IX Header "USAGE"
\&\fBgen-helper-files\fR \fI\-m\fR master \fI\-d\fR dictionary \fI\-l\fR loader \fI\-s\fR store
.PP
\&\fBgen-helper-files \-h\fR
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This script takes as input the master file in the libdncommon-bash library. It
then creates three files:
.RS 4
.IP dictionary 4
.IX Item "dictionary"
Used by Vim in handling the dncommon-bash library. This is a simple sorted list
of functions used as a dictionary file.
.IP "loader script" 4
.IX Item "loader script"
Used by Vim in handling the dncommon-bash library. This is a script which, when
run, loads a vim data structure with function information that can be used by Vim.
.IP store 4
.IX Item "store"
A perl-based persistent data store of the function data for use by perl scripts
accessing function data.
.RE
.RS 4
.RE
.SH CONFIGURATION
.IX Header "CONFIGURATION"
This script requires no configuration files or environmental variables.
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
.SS "\-\-master \-m"
.IX Subsection "--master -m"
Master (root) file in dncommon-bash library.
.PP
Required. Filepath.
.SS "\-\-dictionary \-d"
.IX Subsection "--dictionary -d"
Vim dictionary file to be written.
.PP
Required. Filepath.
.SS "\-\-loader \-l"
.IX Subsection "--loader -l"
Vim loader script to be written.
.PP
Required. Filepath.
.SS "\-\-store \-s"
.IX Subsection "--store -s"
Perl persistent data store to be written.
.PP
Required. Filepath.
.SH OPTIONS
.IX Header "OPTIONS"
Nil.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
The exit code is 0 for successful execution and 1 if the script does a
controlled exit following an error. If the script crashes unexpectedly
the error code is that given by the system.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
This script is a wrapper for several functions from the Dn::CommonBash module.
See "DIAGNOSTICS" in Dn::CommonBash for the diagnostic messages it emits.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
None reported.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
Const::Fast, Dn::CommonBash, Moo, MooX::Options, namespace::clean, strictures,
version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer <david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
