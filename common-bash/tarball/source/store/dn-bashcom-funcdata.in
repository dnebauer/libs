#!/usr/bin/perl

use Moo;                                  # {{{1
use strictures 2;
use 5.036_001;
use namespace::clean;
use version; our $VERSION = qv('0.1');    # }}}1

{

  package Dn::Internal;

  use Moo;                                # {{{1
  use MooX::Options;
  use namespace::clean -except => [ '_options_data', '_options_config' ];
  use Const::Fast;
  use Carp;
  use Dn::CommonBash;

  with qw(Role::Utils::Dn);

  my $library = Dn::CommonBash->new();

  const my $TRUE  => 1;
  const my $FALSE => 0;
  ## no critic (RequireInterpolationOfMetachars)
  const my $STORE => q{@pkgdata_dir@/perlfuncdata};
  ## use critic

  # }}}1

  # Options

  # filter (-f) {{{1
  option 'filter' => (
    is            => 'rw',
    format        => 's',
    required      => $TRUE,
    short         => 'f',
    documentation => 'Part or all of a function name',
  );    # }}}1

  # Methods

  # run() {{{1
  #
  # does:   identify function and display its details
  # params: nil
  # prints: nil
  # return: n/a, dies on failure
  sub run ($self) {    ## no critic (RequireInterpolationOfMetachars)

    # user selects function to display
    my $funcname = $library->select_function($self->filter, $STORE);

    # display function information
    if ($funcname) {
      my @display = $library->display_function_details($funcname, $STORE);
      select STDOUT;    ## no critic (ProhibitOneArgSelect)
      $self->vim_list_print(@display);
    }
    return $TRUE;
  }    # }}}1

}

my $p = Dn::Internal->new_with_options->run;

1;

# POD {{{1

## no critic (RequirePodSections)

__END__

=head1 NAME

dn-bashcom-funcdata - display information on dncommon-bash library functions

=head1 USAGE

B<dn-bashcom-funcdata> filter

B<dn-bashcom-funcdata -h>

=head1 REQUIRED ARGUMENTS

=head2 filter

Filter function names to choose from, i.e., part of function name to match on.

Required.

=head1 DESCRIPTION

The user selects a function from the libdncommon-bash library. The list of
function names is filtered to display only those containing the text fragment.

Exact matches take precedence over partial matches. That is, if the filter
exactly matches a function name that function will be displayed, even if the
filter partially matches other functions.

Once a function is selected, information about it is then displayed.

=head1 DEPENDENCIES

Carp, Const::Fast, Dn::Common, Dn::CommonBash, Moo, MooX::Options,
namespace::clean, Role::Utils::Dn, strictures, version.

=head1 BUGS AND LIMITATIONS

Please report any bugs to the author.

=head1 AUTHOR

David Nebauer E<lt>davidnebauer@hotkey.net.auE<gt>

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2024 David Nebauer E<lt>david@nebauer.orgE<gt>

This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
# vim: fdm=marker :
